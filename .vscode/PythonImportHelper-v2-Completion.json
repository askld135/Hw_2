[
    {
        "label": "cv2",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "cv2",
        "description": "cv2",
        "detail": "cv2",
        "documentation": {}
    },
    {
        "label": "face_recognition",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "face_recognition",
        "description": "face_recognition",
        "detail": "face_recognition",
        "documentation": {}
    },
    {
        "label": "SinpleFacerec",
        "importPath": "simple_facerec",
        "description": "simple_facerec",
        "isExtraImport": true,
        "detail": "simple_facerec",
        "documentation": {}
    },
    {
        "label": "SimpleFacerec",
        "importPath": "simple_facerec",
        "description": "simple_facerec",
        "isExtraImport": true,
        "detail": "simple_facerec",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "glob",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "glob",
        "description": "glob",
        "detail": "glob",
        "documentation": {}
    },
    {
        "label": "numpy",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "numpy",
        "description": "numpy",
        "detail": "numpy",
        "documentation": {}
    },
    {
        "label": "img",
        "kind": 5,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "img = cv2.imread(\"Michael_Douglas.jpg\")\nrgb_img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)\nimg_encoding = face_recognition.face_encodings(rgb_img)[0]\nimg2 = cv2.imread(\"images/Keum-Kang-seon.jpg\")\nrgb_img2 = cv2.cvtColor(img2, cv2.COLOR_BGR2RGB)\nimg_encoding2 = face_recognition.face_encodings(rgb_img2)[0]\nresult = face_recognition.compare_faces([img_encoding],img_encoding2)\nprint(result)\ncv2.imshow(\"Img\", img)\ncv2.imshow(\"Img2\", img2)",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "rgb_img",
        "kind": 5,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "rgb_img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)\nimg_encoding = face_recognition.face_encodings(rgb_img)[0]\nimg2 = cv2.imread(\"images/Keum-Kang-seon.jpg\")\nrgb_img2 = cv2.cvtColor(img2, cv2.COLOR_BGR2RGB)\nimg_encoding2 = face_recognition.face_encodings(rgb_img2)[0]\nresult = face_recognition.compare_faces([img_encoding],img_encoding2)\nprint(result)\ncv2.imshow(\"Img\", img)\ncv2.imshow(\"Img2\", img2)\ncv2.waitKey(0)",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "img_encoding",
        "kind": 5,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "img_encoding = face_recognition.face_encodings(rgb_img)[0]\nimg2 = cv2.imread(\"images/Keum-Kang-seon.jpg\")\nrgb_img2 = cv2.cvtColor(img2, cv2.COLOR_BGR2RGB)\nimg_encoding2 = face_recognition.face_encodings(rgb_img2)[0]\nresult = face_recognition.compare_faces([img_encoding],img_encoding2)\nprint(result)\ncv2.imshow(\"Img\", img)\ncv2.imshow(\"Img2\", img2)\ncv2.waitKey(0)",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "img2",
        "kind": 5,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "img2 = cv2.imread(\"images/Keum-Kang-seon.jpg\")\nrgb_img2 = cv2.cvtColor(img2, cv2.COLOR_BGR2RGB)\nimg_encoding2 = face_recognition.face_encodings(rgb_img2)[0]\nresult = face_recognition.compare_faces([img_encoding],img_encoding2)\nprint(result)\ncv2.imshow(\"Img\", img)\ncv2.imshow(\"Img2\", img2)\ncv2.waitKey(0)",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "rgb_img2",
        "kind": 5,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "rgb_img2 = cv2.cvtColor(img2, cv2.COLOR_BGR2RGB)\nimg_encoding2 = face_recognition.face_encodings(rgb_img2)[0]\nresult = face_recognition.compare_faces([img_encoding],img_encoding2)\nprint(result)\ncv2.imshow(\"Img\", img)\ncv2.imshow(\"Img2\", img2)\ncv2.waitKey(0)",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "img_encoding2",
        "kind": 5,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "img_encoding2 = face_recognition.face_encodings(rgb_img2)[0]\nresult = face_recognition.compare_faces([img_encoding],img_encoding2)\nprint(result)\ncv2.imshow(\"Img\", img)\ncv2.imshow(\"Img2\", img2)\ncv2.waitKey(0)",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "result",
        "kind": 5,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "result = face_recognition.compare_faces([img_encoding],img_encoding2)\nprint(result)\ncv2.imshow(\"Img\", img)\ncv2.imshow(\"Img2\", img2)\ncv2.waitKey(0)",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "sfr",
        "kind": 5,
        "importPath": "real_time",
        "description": "real_time",
        "peekOfCode": "sfr = SimpleFacerec()\nsfr.load_encoding_images(\"images/\")\n#Load Camera\ncap = cv2.VideoCapture(0)\ncap.set(cv2.CAP_PROP_FRAME_WIDTH, 1440)\ncap.set(cv2.CAP_PROP_FRAME_HEIGHT, 1080)\nwhile True:\n    ret, frame = cap.read()\n    #Detect Faces\n    face_locations, face_names = sfr.detect_known_faces(frame)",
        "detail": "real_time",
        "documentation": {}
    },
    {
        "label": "cap",
        "kind": 5,
        "importPath": "real_time",
        "description": "real_time",
        "peekOfCode": "cap = cv2.VideoCapture(0)\ncap.set(cv2.CAP_PROP_FRAME_WIDTH, 1440)\ncap.set(cv2.CAP_PROP_FRAME_HEIGHT, 1080)\nwhile True:\n    ret, frame = cap.read()\n    #Detect Faces\n    face_locations, face_names = sfr.detect_known_faces(frame)\n    for face_loc, name in zip(face_locations, face_names):\n        top, right, bottom, left = face_loc[0], face_loc[1], face_loc[2], face_loc[3]\n        #y1, x1, y2, x2",
        "detail": "real_time",
        "documentation": {}
    },
    {
        "label": "SimpleFacerec",
        "kind": 6,
        "importPath": "simple_facerec",
        "description": "simple_facerec",
        "peekOfCode": "class SimpleFacerec:\n    def __init__(self):\n        self.known_face_encodings = []\n        self.known_face_names = []\n        # Resize frame for a faster speed\n        self.frame_resizing = 0.25\n    def load_encoding_images(self, images_path):\n        \"\"\"\n        Load encoding images from path\n        :param images_path:",
        "detail": "simple_facerec",
        "documentation": {}
    }
]